TARGETNAME=symcryptConstantGen
TARGETTYPE=PROGRAM
UMTYPE=console

MSC_WARNING_LEVEL=/W4 /WX

# mark this as test code, as that re-enabled the __DATE__ and __TIME__ macros in the compiler.
TEST_CODE= 1

# TEST_CODE disables LTCG, this re-enables it
LINK_TIME_CODE_GENERATION = 1

INCLUDES= \
    ..\lib ; \
    ..\inc ; \
    $(DDK_INC_PATH); \

SOURCES= \
    main_gen.cpp \
        
#
# We link RSA32 and msbignum twice, once from the Enigma build location, and once from windows.
# This works in either state.
#
TARGETLIBS= \
#    $(MINCORE_SDK_LIB_PATH)\mincore.lib \
    $(MINWIN_EXTERNAL_SDK_LIB_PATH_L)\ntdll.lib \
!if EXIST( $(PROJECT_OBJ_ROOT)\released\windows\ntrsa32\umode\$(O)\rsa32.lib )
#    $(PROJECT_OBJ_ROOT)\released\windows\ntrsa32\umode\$(O)\rsa32.lib \
!endif
#    $(DS_LIB_PATH)\rsa32.lib \
#!if EXIST( $(PROJECT_OBJ_ROOT)\released\windows\bignum\winnt\$(O)\msbignum.lib )
#    $(PROJECT_OBJ_ROOT)\released\windows\bignum\winnt\$(O)\msbignum.lib \
#!endif
#    $(DS_LIB_PATH)\msbignum.lib \
    $(ONECORE_EXTERNAL_SDK_LIB_PATH)\powrprof.lib \
    $(ONECORE_EXTERNAL_SDK_LIB_PATH)\bcrypt.lib \
#    $(PROJECT_OBJ_ROOT)\symcrypt\lib\$(O)\symcrypt.lib \
#    $(PROJECT_OBJ_ROOT)\symcrypt\unittest\lib\$(O)\symcryptunittest_lib.lib \
	
UNICODE = 1

USE_MSVCRT=1

BUFFER_OVERFLOW_CHECKS=1

ENABLE_ISO_VOLATILE_WARNING=1 

USE_STL = 1
STL_VER = 70
USE_NATIVE_EH = 1

MUI = 0
MUI_COMMENT = Unittest only, this is never localized

# Target OneCore
BUILD_FOR_CORESYSTEM=1

TARGETLIBS= \
    $(TARGETLIBS) \
    $(MINCORE_EXTERNAL_SDK_LIB_VPATH_L)\mincore.lib \
    $(MINCORE_EXTERNAL_SDK_LIB_VPATH_L)\mincore_legacy.lib \
    $(MINCORE_EXTERNAL_SDK_LIB_VPATH_L)\mincore_obsolete.lib \
#    $(MINWIN_PRIV_SDK_LIB_VPATH)\api-ms-win-security-cryptoapi-l1.lib \

