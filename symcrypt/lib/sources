#----------------------------------------------------------------------------
#
# Description:
#
#       sources file for symcrypt cryptography library
#
# History:
#
#
#----------------------------------------------------------------------------
ARM64X_EC_ENABLED=1

TARGETNAME = symcrypt
TARGETTYPE=LIBRARY

KM_LIBRARY = 1  # enable /kernel flag & epilogue metadata
GUARD = 1       # enable CFG
ENABLE_ASM_RETPOLINE = 1
ENABLE_RETPOLINE_LINKER_WARNING = 1

# Enable /Gy for all assembler code, and some additional symcryptasm definitions for Arm64 assembler code
ASM_DEFINES=\
!IF "$(_BUILDARCH)" == "arm64"
    $(ASM_DEFINES) /Gy /DSYMCRYPT_CPU_ARM64 /DSYMCRYPT_MASM
!ELSE
    $(ASM_DEFINES) /Gy
!ENDIF

# Add /DDBG to USER_C_FLAGS in CHK build for use in cppasm processing
!IF !$(FREEBUILD)
USER_C_FLAGS=$(USER_C_FLAGS) /DDBG
!ENDIF

USE_MAKEFILE_INC = 1

# Explicitly call out that we must preprocess symcryptasm files
# Make the target paths be architecture specific to get nmake to pick the right inference rule
NTTARGETFILE0=\
!IF "$(_BUILDARCH)" == "amd64"
    $(OBJ_PATH)\$(O)\..\amd64\fdef_asm.asm \
    $(OBJ_PATH)\$(O)\..\amd64\wipe.asm \
    $(OBJ_PATH)\$(O)\..\amd64\aesasm.asm \
    $(OBJ_PATH)\$(O)\..\amd64\fdef369_asm.asm \
    $(OBJ_PATH)\$(O)\..\amd64\fdef_mulx.asm \
    $(OBJ_PATH)\$(O)\..\amd64\sha256xmm_asm.asm \
    $(OBJ_PATH)\$(O)\..\amd64\sha256ymm_asm.asm \
    $(OBJ_PATH)\$(O)\..\amd64\sha512ymm_asm.asm \
    $(OBJ_PATH)\$(O)\..\amd64\sha512ymm_avx512vl_asm.asm \
!ELSEIF "$(_BUILDARCH)" == "x86"
    $(OBJ_PATH)\$(O)\..\i386\aesasm.asm \
    $(OBJ_PATH)\$(O)\..\i386\fdef_asm.asm \
!ELSEIF "$(_BUILDARCH)" == "arm64"
    $(OBJ_PATH)\$(O)\..\arm64\fdef_asm.asm \
    $(OBJ_PATH)\$(O)\..\arm64\fdef369_asm.asm \
    $(OBJ_PATH)\$(O)\..\arm64\wipe.asm \
!IF "$(ARM64X_EC_ENABLED)" == "1"
    $(OBJ_PATH)\$(O)\..\arm64\arm64ec\fdef_asm.asm \
    $(OBJ_PATH)\$(O)\..\arm64\arm64ec\fdef369_asm.asm \
    $(OBJ_PATH)\$(O)\..\arm64\arm64ec\wipe.asm \
!ENDIF
!ENDIF

INCLUDES=  \
    ..\inc; \
    $(IFSKIT_INC_PATH); \
#    $(MINWIN_PRIVATE_PRIV_SDK_INC_PATH_L)\boot; \
    $(OBJECT_ROOT)\SymCrypt\Publics\$(O); \
    $(OBJECT_ROOT)\SymCrypt\build\$(O); \

SOURCES= \
    blockciphermodes.c \
    hash.c \
    parhash.c \
    ccm.c \
    ghash.c \
    gcm.c \
    aes-default.c \
    aes-default-bc.c \
    aes-key.c \
    aes-c.c \
    aes-asm.c \
    aes-xmm.c \
    aes-ymm.c \
#    aes-zmm.c \
    aes-neon.c \
    aes-selftest.c \
    aesTables.c \
    aescmac.c \
    xtsaes.c \
    3des.c \
    desTables.c \
    desx.c \
    rc2.c \
    rc4.c \
    session.c \
    sha1.c \
    sha256.c \
    sha256-xmm.c \
    sha256-ymm.c \
    sha512.c \
    sha512-ymm.c \
    sha3.c \
    sha3_256.c \
    sha3_384.c \
    sha3_512.c \
    shake.c \
    md5.c \
    md4.c \
    md2.c \
    hmacmd5.c \
    hmacsha1.c \
    hmacsha256.c \
    hmacsha384.c \
    hmacsha512.c \
    kmac.c \
    tlsCbcVerify.c \
    aesCtrDrbg.c \
    libmain.c \
    equal.c \
    env_windowsUserModeWin7.c \
    env_windowsUserModeWin8_1.c \
    env_windowsKernelModeWin7.c \
    env_windowsKernelModeWin8_1.c \
    env_windowsBootLib.c \
    env_generic.c \
    env_windowsKernelDebugger.c \
    env_win10Sgx.c \
    fatalIntercept.c \
    selftest.c \
    rdrand.c \
    rdseed.c \
    sha256Par.c \
    sha256Par-ymm.c \
    sha512Par.c \
    sha512Par-ymm.c \
    marvin32.c \
    cpuid.c \
    cpuid_um.c \
    cpuid_notry.c \
    pbkdf2.c \
    pbkdf2_hmacsha1.c \
    pbkdf2_hmacsha256.c \
    sp800_108.c \
    sp800_108_hmacsha1.c \
    sp800_108_hmacsha256.c \
    sp800_108_hmacsha512.c \
    srtp_kdf.c \
    srtp_kdf_selftest.c \
    ssh_kdf.c \
    ssh_kdf_sha256.c \
    ssh_kdf_sha512.c \
    tlsprf.c \
    tlsprf_selftest.c \
    hkdf.c \
    hkdf_selftest.c \
    chacha20.c \
    poly1305.c \
    chacha20_poly1305.c \
\
    a_dispatch.c \
    fdef_general.c \
    fdef_int.c \
    fdef_mod.c \
    fdef369_mod.c \
    ecpoint.c \
    ecurve.c \
    eckey.c \
    ec_dispatch.c \
    ec_short_weierstrass.c \
    ec_internal_curves.c \
    ec_dsa.c \
    ec_dh.c \
    ec_montgomery.c \
    ec_twisted_edwards.c \
    ec_mul.c \
    fips_selftest.c \
    ScsTable.c \
    primes.c \
    modexp.c \
    gen_int.c \
    crt.c \
    rsakey.c \
    rsa_enc.c \
    rsa_padding.c \
    dlgroup.c \
    dlkey.c \
    dsa.c \
    dh.c \
    dl_internal_groups.c \
    recoding.c \
    IEEE802_11SaeCustom.c \
    scsTools.c \
    paddingPkcs7.c \

AMD64_SOURCES = \
    wipe.asm \
    aesasm.asm \
    fdef_asm.asm \
    fdef369_asm.asm \
    fdef_mulx.asm \
    sha256xmm_asm.asm \
    sha256ymm_asm.asm \
    sha512ymm_asm.asm \
    sha512ymm_avx512vl_asm.asm \

I386_SOURCES = \
    aesasm.asm \
    wipe.asm \
    fdef_asm.asm \

ARM_SOURCES = \
    fdef_asm.asm \
    wipe.asm \
    aesasm.asm \

ARM64_SOURCES = \
    fdef_asm.asm \
    fdef369_asm.asm \
    wipe.asm \

ARM64EC_SOURCES = \
    fdef_asm.asm \
    fdef369_asm.asm \
    wipe.asm \

BUFFER_OVERFLOW_CHECKS=1

MSC_WARNING_LEVEL= /W4 /WX

ENABLE_ISO_VOLATILE_WARNING=1

#PRECOMPILED_INCLUDE = ..\precomp.h
#PRECOMPILED_CXX = 1

